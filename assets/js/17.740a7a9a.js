(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{371:function(e,t,a){"use strict";a.r(t);var r=a(42),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"fork-your-own-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fork-your-own-repo"}},[e._v("#")]),e._v(" Fork your own repo")]),e._v(" "),a("p",[e._v("Sometimes you may find yourself in need to fork your own repo on Github.")]),e._v(" "),a("p",[e._v("I've come across this situation recently, when I finished the "),a("a",{attrs:{href:"https://javayuga.github.io/jwt-spring-boot-template/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jwt-spring-boot-template"),a("OutboundLink")],1),e._v(" project.")]),e._v(" "),a("p",[e._v("This is the first in a planned series to explore Spring Boot as backend for popular frontend frameworks (Vue, React, and AngularJS).")]),e._v(" "),a("p",[e._v("The second article deals with a Vue Nuxt frontend.")]),e._v(" "),a("p",[e._v("I could easily make the Vue project stand on its own.")]),e._v(" "),a("p",[e._v("But the idea is to share the existing docker-compose.yml, whose development had already started during the JWT project.")]),e._v(" "),a("p",[e._v("The desired final structure is to have "),a("strong",[e._v("jwt-spring-boot-template")]),e._v(" project as a parent (upstream), and each frontend implementation as a child (downstream).  👪")]),e._v(" "),a("h2",{attrs:{id:"forking-by-changing-upstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#forking-by-changing-upstream"}},[e._v("#")]),e._v(" Forking by changing upstream")]),e._v(" "),a("p",[e._v("If you try to fork your own repo using GitHub's interface, you'll see a message like this: 😕")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork01.png"),alt:"cannot fork own"}}),e._v(" "),a("p",[e._v("When you own the repository, you're not allowed to fork it by simply clicking on a button.")]),e._v(" "),a("p",[e._v("The correct way is to create a new repository and change its upstream remote source.")]),e._v(" "),a("h3",{attrs:{id:"create-an-empty-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-an-empty-repo"}},[e._v("#")]),e._v(" Create an empty repo")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork02.png"),alt:"create empty"}}),e._v(" "),a("h3",{attrs:{id:"clone-the-empty-repo-locally"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone-the-empty-repo-locally"}},[e._v("#")]),e._v(" Clone the empty repo locally")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ git clone https://github.com/javayuga/jwt-spring-boot-nuxt-template\nCloning into 'jwt-spring-boot-nuxt-template'...\nwarning: You appear to have cloned an empty repository.\n")])])]),a("h3",{attrs:{id:"add-the-parent-repo-as-an-upstream-remote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-the-parent-repo-as-an-upstream-remote"}},[e._v("#")]),e._v(" Add the parent repo as an upstream remote")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ cd jwt-spring-boot-nuxt-template/\n\n$ git remote add upstream https://github.com/javayuga/jwt-spring-boot-template.git\n\n$ git remote -v\norigin  https://github.com/javayuga/jwt-spring-boot-nuxt-template (fetch)\norigin  https://github.com/javayuga/jwt-spring-boot-nuxt-template (push)\nupstream        https://github.com/javayuga/jwt-spring-boot-template.git (fetch)\nupstream        https://github.com/javayuga/jwt-spring-boot-template.git (push)\n")])])]),a("h3",{attrs:{id:"pull-source-code-from-the-upstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-source-code-from-the-upstream"}},[e._v("#")]),e._v(" Pull source code from the upstream")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ git pull upstream master\nremote: Enumerating objects: 148, done.\nremote: Counting objects: 100% (148/148), done.\nremote: Compressing objects: 100% (94/94), done.\nremote: Total 148 (delta 32), reused 138 (delta 25), pack-reused 0\nReceiving objects: 100% (148/148), 465.38 KiB | 824.00 KiB/s, done.\nResolving deltas: 100% (32/32), done.\nFrom https://github.com/javayuga/jwt-spring-boot-template\n * branch            master     -> FETCH_HEAD\n * [new branch]      master     -> upstream/master\n\n")])])]),a("h3",{attrs:{id:"push-to-your-own-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-to-your-own-master"}},[e._v("#")]),e._v(" Push to your own master")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ git push origin master\nEnumerating objects: 148, done.\nCounting objects: 100% (148/148), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (87/87), done.\nWriting objects: 100% (148/148), 465.38 KiB | 51.71 MiB/s, done.\nTotal 148 (delta 32), reused 148 (delta 32)\nremote: Resolving deltas: 100% (32/32), done.\nTo https://github.com/javayuga/jwt-spring-boot-nuxt-template\n * [new branch]      master -> master\n")])])]),a("h2",{attrs:{id:"updating-the-parent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updating-the-parent"}},[e._v("#")]),e._v(" Updating the parent")]),e._v(" "),a("p",[e._v("Very well.  👍")]),e._v(" "),a("p",[e._v("After the last step, you can see that the forked repository is not empty anymore.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork03.png"),alt:"forked not empty"}}),e._v(" "),a("p",[e._v("Now you can proceed making changes to this repository as usual.")]),e._v(" "),a("p",[e._v("But let's say that you want to make changes to the parent?")]),e._v(" "),a("p",[e._v("For instance, the current README.MD could be updated to mention the new NUXT template.")]),e._v(" "),a("p",[e._v("The goal is to make the README.md common to all children of "),a("strong",[e._v("jwt-spring-boot-template")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"pushing-to-the-upstream-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushing-to-the-upstream-master"}},[e._v("#")]),e._v(" Pushing to the upstream master")]),e._v(" "),a("p",[e._v("Start by making a regular commit (maybe with "),a("a",{attrs:{href:"https://tortoisegit.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TortoiseGit"),a("OutboundLink")],1),e._v("):")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork04.png"),alt:"regular commit"}}),e._v(" "),a("p",[e._v("Then push the upstream master directly:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[e._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ git push upstream master\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 579 bytes | 579.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), completed with 1 local object.\nTo https://github.com/javayuga/jwt-spring-boot-template.git\n   84e4e48..0733cae  master -> master\n")])])]),a("p",[e._v("Now you'll see that the changes you made on the child are available on the parent repo:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork05.png"),alt:"regular commit"}}),e._v(" "),a("h2",{attrs:{id:"exploring-pull-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exploring-pull-requests"}},[e._v("#")]),e._v(" Exploring Pull Requests")]),e._v(" "),a("p",[e._v("The last example only works well when you're sure you are alone and own both repositories.")]),e._v(" "),a("p",[e._v("Let's explore a bit how Github handles pull requests with multiple collaborators, maybe on repositories that do not belong to you.")]),e._v(" "),a("h3",{attrs:{id:"pull-request-from-a-branch-on-the-same-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-from-a-branch-on-the-same-repo"}},[e._v("#")]),e._v(" Pull request from a branch on the same repo")]),e._v(" "),a("p",[e._v("This is a common scenario when you are collaborating in a team. 💪")]),e._v(" "),a("p",[e._v("Let's say you made a few changes to how Dockerfiles are named, in preparation to have multiple services declared on your "),a("em",[e._v("docker-compose.yml")]),e._v(".")]),e._v(" "),a("p",[e._v('You may create a new branch called "newDockerFolders", and push your changes there:')]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork06.png"),alt:"regular commit to new branch"}}),e._v(" "),a("p",[e._v("You may then ask your colleague to review and approve the changes:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork07.png"),alt:"create pull request"}}),e._v(" "),a("p",[e._v('Clicking on the "compare & pull request" button will open a new form, which tells you what changes were detected.')]),e._v(" "),a("p",[e._v('The "able to merge" message means no conflicts were detected.   Let\'s stick to the '),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Happy_path",target:"_blank",rel:"noopener noreferrer"}},[e._v("happy flow"),a("OutboundLink")],1),e._v(". 😀")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork08.png"),alt:"create pull request"}}),e._v(" "),a("p",[e._v("Now if your colleague opens the Pull Requests tab.")]),e._v(" "),a("p",[e._v("There is conflict, so all he needs to do is to click on the Merge Request button.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork09.png"),alt:"merge branch"}}),e._v(" "),a("p",[e._v("He may choose to delete the branch as well.")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork10.png"),alt:"delete branch"}}),e._v(" "),a("p",[e._v("Fine, so far so good.")]),e._v(" "),a("p",[e._v("This is all review, just the standard GitHub procedures for merging a branch.")]),e._v(" "),a("h3",{attrs:{id:"pull-request-on-a-new-branch-for-the-upstream-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-on-a-new-branch-for-the-upstream-repo"}},[e._v("#")]),e._v(" Pull request on a new branch for the upstream repo")]),e._v(" "),a("p",[e._v("If you are contributing with a community project, you will not have permission to push to master in the first place.")]),e._v(" "),a("p",[e._v("Instead you will need to push to a separate branch:")]),e._v(" "),a("div",{staticClass:"language-{1) extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ git push upstream master:newDockerFolders\nEnumerating objects: 6, done.\nCounting objects: 100% (6/6), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (4/4), 1.02 KiB | 1.02 MiB/s, done.\nTotal 4 (delta 2), reused 0 (delta 0)\nremote: Resolving deltas: 100% (2/2), completed with 2 local objects.\nremote:\nremote: Create a pull request for 'newDockerFolders' on GitHub by visiting:\nremote:      https://github.com/javayuga/jwt-spring-boot-template/pull/new/newDockerFolders\nremote:\nTo https://github.com/javayuga/jwt-spring-boot-template.git\n * [new branch]      master -> newDockerFolders\n")])])]),a("p",[e._v("The rest of the procedure will look exactly the same.")]),e._v(" "),a("p",[e._v("This is probably what you will see after creating and merging a pull request from the "),a("em",[e._v("NewDockerFolders")]),e._v(" branch on your parent:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/images/2020-07-05_Fork11.png"),alt:"merged new branch on parent"}}),e._v(" "),a("h2",{attrs:{id:"wrapping-it-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wrapping-it-up"}},[e._v("#")]),e._v(" Wrapping it up")]),e._v(" "),a("p",[e._v("We have explored some common scenarios when using multiple repositories on Github:")]),e._v(" "),a("ul",[a("li",[e._v("forking from a project that you own")]),e._v(" "),a("li",[e._v("pushing to the parent directly on the master branch")]),e._v(" "),a("li",[e._v("creating pull requests on the child with a branch")]),e._v(" "),a("li",[e._v("creating pull requests on the parent with a brach")])]),e._v(" "),a("p",[e._v("Though Github was used as an example, the basic concepts apply to any git-based DevOps providers (such as "),a("a",{attrs:{href:"https://bitbucket.org/product/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitBucket"),a("OutboundLink")],1),e._v(", or "),a("a",{attrs:{href:"https://about.gitlab.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitlab"),a("OutboundLink")],1),e._v(").")]),e._v(" "),a("p",[e._v("If you have any doubts or comments, please contact me on "),a("a",{attrs:{href:"https://www.linkedin.com/in/marcoaasilva/",target:"_blank",rel:"noopener noreferrer"}},[e._v("LinkedIn"),a("OutboundLink")],1),e._v(". 📢")]),e._v(" "),a("p",[e._v("Happy coding! 😀")])])}),[],!1,null,null,null);t.default=s.exports}}]);